<?xml version="1.0" encoding="utf-8"?>
<root>
    <!--
      Microsoft ResX Schema

      Version 2.0

      The primary goals of this format is to allow a simple XML format
      that is mostly human readable. The generation and parsing of the
      various data types are done through the TypeConverter classes
      associated with the data types.

      Example:

      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>

      There are any number of "resheader" rows that contain simple
      name/value pairs.

      Each data row contains a name, and value. The row also contains a
      type or mimetype. Type corresponds to a .NET class that support
      text/value conversion through the TypeConverter architecture.
      Classes that don't support this are serialized and stored with the
      mimetype set.

      The mimetype is used for serialized objects, and tells the
      ResXResourceReader how to depersist the object. This is currently not
      extensible. For a given mimetype the value must be set accordingly:

      Note - application/x-microsoft.net.object.binary.base64 is the format
      that the ResXResourceWriter will generate, however the reader can
      read any of the formats listed below.

      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.

      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.

      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="adding_and_removing_subsidiaries" xml:space="preserve">
    <value>Adding and removing subsidiaries</value>
  </data>
    <data name="before_you_upload" xml:space="preserve">
    <value>Before you upload your file, make sure you're using the latest version of the</value>
  </data>
    <data name="companies_house_number" xml:space="preserve">
    <value>Companies House number</value>
  </data>
    <data name="create_subsidiary_ids" xml:space="preserve">
    <value>Create subsidiary IDs</value>
  </data>
    <data name="download_subsidiaries_list" xml:space="preserve">
    <value>Download subsidiaries list</value>
  </data>
    <data name="joined" xml:space="preserve">
    <value>Joined</value>
  </data>
    <data name="no_ch_number" xml:space="preserve">
    <value>No CH Number</value>
  </data>
    <data name="remove_subsidiary" xml:space="preserve">
    <value>Remove</value>
  </data>
    <data name="reporting" xml:space="preserve">
    <value>Reporting</value>
  </data>
    <data name="return_to_account_home" xml:space="preserve">
    <value>Account home</value>
  </data>
    <data name="subsidiaries" xml:space="preserve">
    <value>Subsidiaries</value>
  </data>
    <data name="subsidiaries_list" xml:space="preserve">
    <value>Subsidiaries list</value>
  </data>
    <data name="subsidiaries_need_to_upload_csv" xml:space="preserve">
    <value>To add subsidiaries you will need to upload a CSV file.</value>
  </data>
    <data name="subsidiaries_not_found" xml:space="preserve">
    <value>Subsidiary not found</value>
  </data>
    <data name="subsidiaries_will_appear" xml:space="preserve">
    <value>Subsidiaries will appear here after they have been processed.</value>
  </data>
    <data name="subsidiary_accuracy_warning_text" xml:space="preserve">
    <value>Check all the information you have provided is accurate. If any of it is incorrect or incomplete, you will need to provide the correct information. Use the subsidiary IDs for all future organisation details and packaging data submissions.</value>
  </data>
    <data name="subsidiary_file_template" xml:space="preserve">
    <value>subsidiary file template (opens in a new tab)</value>
  </data>
    <data name="subsidiary_id" xml:space="preserve">
    <value>Subsidiary ID</value>
  </data>
    <data name="subsidiary_name" xml:space="preserve">
    <value>Subsidiary name</value>
  </data>
    <data name="text_assistive.warning" xml:space="preserve">
    <value>Warning</value>
  </data>
    <data name="to_add_or_remove" xml:space="preserve">
    <value>To add or remove subsidiaries, you must</value>
  </data>
    <data name="update_and_resubmit" xml:space="preserve">
    <value>update and resubmit your registration file</value>
  </data>
    <data name="upload_subsidiary_file" xml:space="preserve">
    <value>Upload subsidiary file</value>
  </data>
    <data name="use_the_file_upload" xml:space="preserve">
    <value>Use the file upload to create subsidiary IDs – you will need these subsidiary IDs to add subsidiaries to your organisation.</value>
  </data>
    <data name="within_28_days_of_the_change" xml:space="preserve">
    <value>within 28 days of the change. You will need to enter the subsidiary IDs to do this.</value>
  </data>
    <data name="search_for_a_subsidiary_by" xml:space="preserve">
    <value>Search for a Subsidiary by name, ID or Companies House number</value>
  </data>
    <data name="clear_and_reset" xml:space="preserve">
    <value>Clear and reset</value>
  </data>
    <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
    <data name="subsidiary_not_found_message" xml:space="preserve">
    <value>Make sure you entered the correct subsidiary name, ID or Companies House number. If you need to add a subsidiary to&lt;br /&gt;this parent company, use the file upload to create a subsidiary ID and then update and resubmit your registration file.</value>
  </data>
    <data name="subsidiary_not_found_resubmit_warning_text" xml:space="preserve">
    <value>If you need to add a subsidiary to this parent company, click on add a single subsidiary button below or use the file upload to create a subsidiary ID and then update and resubmit your registration file.</value>
  </data>
    <data name="before_you_start" xml:space="preserve">
    <value>Before you start</value>
  </data>
    <data name="adding_removing_members_affect_packaging_obligations" xml:space="preserve">
    <value>Adding or removing members might affect your organisation's packaging obligations – make sure you have read the</value>
  </data>
    <data name="extended_producer_guidelines" xml:space="preserve">
    <value>guidelines for extended producer responsibility for packaging (opens in a new tab).</value>
  </data>
    <data name="upload_a_file" xml:space="preserve">
    <value>Upload a file</value>
  </data>
    <data name="subsidiaries_file_must_be" xml:space="preserve">
    <value>The file must be:</value>
  </data>
    <data name="subsidiaries_smaller_than_60kb" xml:space="preserve">
    <value>smaller than 60KB</value>
  </data>
    <data name="subsidiaries_in_csv_format" xml:space="preserve">
    <value>in CSV format</value>
  </data>
    <data name="few_minutes_to_upload_file" xml:space="preserve">
    <value>It may take a few minutes for your file to upload - do not close the window while the file is uploading.</value>
  </data>
    <data name="add_a_single_subsidiary" xml:space="preserve">
    <value>Add a single subsidiary</value>
  </data>
  <data name="add_a_single_subsidiary_to_this_producer" xml:space="preserve">
    <value>Add a single subsidiary to this producer</value>
  </data>
  <data name="subsidiary_not_found_resubmit_with_add_single_subsidiary" xml:space="preserve">
    <value>If you need to add a subsidiary to this parent company, click on add a single subsidiary button below or use the file upload to create a subsidiary ID and then update and resubmit your registration file.</value>
  </data>
</root>